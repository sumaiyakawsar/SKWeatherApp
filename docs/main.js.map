{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/weather.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  weatherApiBaseUrl:'https://weatherapi-com.p.rapidapi.com/current.json',\r\n  XRapidAPIHostHeaderName:'X-RapidAPI-Host',\r\n  XRapidAPIHostHeaderValue:'weatherapi-com.p.rapidapi.com',\r\n  XRapidAPIKeyHeaderName:'X-RapidAPI-Key',\r\n  XRapidAPIKeyHeaderValue:'ceb937ebd0msh0fe7ce095905322p1fa576jsn2a8781e5ce82'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"search\">\r\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\">\r\n        <input type=\"text\" placeholder=\"Search city\" name=\"city\" [(ngModel)]=\"cityName\">\r\n    </form>\r\n</div>\r\n\r\n<img src=\"https://images.pexels.com/photos/1198507/pexels-photo-1198507.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" class=\"background\" alt=\"hot\" *ngIf=\"weatherData.current.temp_c > 15\" />\r\n<img src=\"https://images.pexels.com/photos/730256/pexels-photo-730256.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" class=\"background\" alt=\"cold\" *ngIf=\"weatherData.current.temp_c <= 15\" />\r\n\r\n<section class=\"container\" *ngIf=\"weatherData\">\r\n    <div class=\"up \">\r\n        <div class=\"icon\">\r\n            <img src=\"https:{{ weatherData.current.condition.icon }} \" />\r\n        </div>\r\n        <div class=\"weather-data-container\">\r\n\r\n            <div class=\"weather-data\">\r\n\r\n\r\n                <div class=\"describe\">{{ weatherData.current.condition.text }}</div>\r\n                <div class=\"temperature\">{{ weatherData.current.temp_c | number:'1.0-0'}}°C</div>\r\n                <div class=\"location\"> {{ weatherData.location.name }}, {{ weatherData.location.country}}</div>\r\n            </div>\r\n            <div class=\"date_time\">\r\n                <div class=\"time\">{{weatherData.location.localtime | date:'shortTime'}}</div>\r\n                <div class=\"date\">{{weatherData.location.localtime | date:'longDate'}}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"down\">\r\n        <div class=\"more-info-container\">\r\n            <div class=\"flip-card-block\">\r\n                <div class=\"flip-card\">\r\n                    <div class=\"info-block-front\">\r\n                        <mat-icon class=\"icons \">thermostat</mat-icon>\r\n                        <span>Feels Like</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{weatherData.current.feelslike_c | number:'1.0-0'}}°C</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons \">compress</mat-icon>\r\n                        <span>Pressure</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.pressure_mb }} mb</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons yellow\">wb_sunny</mat-icon>\r\n                        <span>UV Index</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.uv }}/10</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons blue\">water_drop </mat-icon>\r\n                        <span>Humidity</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.humidity }}%</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons \">visibility</mat-icon>\r\n                        <span>Visibility</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.vis_km }} km</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons \">air</mat-icon>\r\n                        <span>Wind Speed</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.wind_kph }} km/h</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flip-card-block \">\r\n                <div class=\"flip-card \">\r\n                    <div class=\"info-block-front \">\r\n                        <mat-icon class=\"icons \">north_east</mat-icon>\r\n                        <span>Wind Direction</span>\r\n                    </div>\r\n                    <div class=\"info-block-back \">{{ weatherData.current.wind_degree }}°</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n<footer class=\"footer\">\r\n    <a href=\" https://www.weatherapi.com/ \" title=\"Free Weather API \">\r\n        <img src='https://cdn.weatherapi.com/v4/images/weatherapi_logo.png' alt=\"Weather data by WeatherAPI.com \">\r\n    </a>\r\n</footer>\r\n\r\n<router-outlet> </router-outlet>","import { weatherData } from './models/weather.model';\r\nimport { WeatherService } from './services/weather.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  constructor(private WeatherService:WeatherService){\r\n\r\n  }\r\n\r\n  cityName?:string;\r\n  weatherData?:weatherData;\r\n\r\n  ngOnInit(): void {\r\n    this.getWeatherData(this.cityName);\r\n    this.cityName='';\r\n  }\r\n  onSubmit(){\r\n    this.getWeatherData(this.cityName);\r\n    this.cityName='';\r\n  }\r\n\r\n  private getWeatherData(cityName:string) {\r\n    this.WeatherService.getWeatherData(cityName)\r\n    .subscribe({\r\n      next:(response)=>{\r\n        this.weatherData=response;\r\n        console.log(response);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { environment } from './../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { weatherData } from '../models/weather.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getWeatherData(cityName:string):Observable<weatherData>{\r\n    return this.http.get<weatherData>(environment.weatherApiBaseUrl,{\r\n    headers:new HttpHeaders()\r\n    .set(environment.XRapidAPIHostHeaderName,environment.XRapidAPIHostHeaderValue)\r\n    .set(environment.XRapidAPIKeyHeaderName,environment.XRapidAPIKeyHeaderValue),\r\n    params:new HttpParams()\r\n    .set('q',cityName)\r\n    // .set('units','metric')\r\n    // .set('mode','json')\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}